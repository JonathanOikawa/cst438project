package jo;

import java.io.File;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;

public class Hangman {
	static Random generator = new Random();
	
	// Method to generate the "_ _ a _" string for the .jsp
	public static String generateGuessString(String word, String guesses) {
		String outputString = "";
		for (int i = 0; i < word.length(); i++) {
			boolean correctLetter = false;
			if (guesses != null) {
				for (int j = 0; j < guesses.length(); j++) {
					if (word.charAt(i) == guesses.charAt(j)) {
						outputString += word.charAt(i) + " ";
						correctLetter = true;
					}
				}
			}
			
			if (correctLetter == false) {
				outputString += "_ ";
			}			
		}
		return outputString;
	}
	
	public static boolean isGameWon(String word, String guesses) {
		int correctLetters = 0;
		
		for (int i = 0; i < word.length(); i++) {
			for (int j = 0; j < guesses.length(); j++) {
				if (word.charAt(i) == guesses.charAt(j)) {
					System.out.println(word.charAt(i) + " ... " + guesses.charAt(j));
					correctLetters++;
					break;
				}
			}
		}
		return correctLetters == word.length();
	}
	
	public static String randomWord(String difficulty) {
		try {
			ArrayList<String> wordlist = new ArrayList<String>();
			// read in word list
			ClassLoader classloader = Thread.currentThread().getContextClassLoader();
			InputStream is = null;
			if (difficulty.equals("easy")) {
				System.out.println("New easy word");
				is = classloader.getResourceAsStream("wordlistEasy.txt");
			} else if (difficulty.equals("normal")) {
				System.out.println("New easy woraasd");
				is = classloader.getResourceAsStream("wordlistNormal.txt");
			} else if (difficulty.equals("hard")) {
				System.out.println("New eashardy word");
				is = classloader.getResourceAsStream("wordlistHard.txt");
			} else {
				return null;
			}
			Scanner infile = new Scanner(is);
			while (infile.hasNextLine()) {
				wordlist.add(infile.nextLine());
			}
			infile.close();
			int t = generator.nextInt(wordlist.size());
			return wordlist.get(t);

		} catch (Exception e) {
			System.out.println("Error randomWord: reading wordlist. " + e.getMessage());
			System.exit(0);
			return null; // to keep compiler happy
		}
	}

}
